{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.userSource = new BehaviorSubject(null);\n    this.user$ = this.userSource.asObservable();\n  }\n  updateUser(user) {\n    this.userSource.next(user);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","UserService","constructor","userSource","user$","asObservable","updateUser","user","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\babic\\OneDrive\\Desktop\\airbnb projekat\\airbnb-sit\\frontend\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private userSource = new BehaviorSubject<any>(null);\r\n  user$ = this.userSource.asObservable();\r\n\r\n  updateUser(user: any): void {\r\n    this.userSource.next(user);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAIU,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IACnD,KAAAI,KAAK,GAAG,IAAI,CAACD,UAAU,CAACE,YAAY,EAAE;;EAEtCC,UAAUA,CAACC,IAAS;IAClB,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,IAAI,CAAC;EAC5B;EAAC,QAAAE,CAAA,G;qBANUR,WAAW;EAAA;EAAA,QAAAS,EAAA,G;WAAXT,WAAW;IAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}